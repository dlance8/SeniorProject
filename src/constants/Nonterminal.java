package constants;
public enum Nonterminal {
	MY_ROOT, IDENTIFIER, LITERAL,

	TYPE, PRIMITIVE_TYPE, NUMERIC_TYPE, INTEGRAL_TYPE, FLOATING_POINT_TYPE, REFERENCE_TYPE, CLASS_OR_INTERFACE_TYPE, CLASS_TYPE, INTERFACE_TYPE, TYPE_VARIABLE, ARRAY_TYPE, DIMS, TYPE_PARAMETER, TYPE_PARAMETER_MODIFIER, TYPE_BOUND, ADDITIONAL_BOUND, TYPE_ARGUMENTS, TYPE_ARGUMENT_LIST, TYPE_ARGUMENT, WILDCARD, WILDCARD_BOUNDS, PACKAGE_NAME, TYPE_NAME, PACKAGE_OR_TYPE_NAME, EXPRESSION_NAME, METHOD_NAME, AMBIGUOUS_NAME, COMPILATION_UNIT, PACKAGE_DECLARATION, PACKAGE_MODIFIER, IMPORT_DECLARATION, SINGLE_TYPE_IMPORT_DECLARATION, TYPE_IMPORT_ON_DEMAND_DECLARATION, SINGLE_STATIC_IMPORT_DECLARATION, STATIC_IMPORT_ON_DEMAND_DECLARATION, TYPE_DECLARATION, CLASS_DECLARATION, NORMAL_CLASS_DECLARATION, CLASS_MODIFIER, TYPE_PARAMETERS, TYPE_PARAMETER_LIST, SUPERCLASS, SUPERINTERFACES, INTERFACE_TYPE_LIST, CLASS_BODY, CLASS_BODY_DECLARATION, CLASS_MEMBER_DECLARATION, FIELD_DECLARATION, FIELD_MODIFIER, VARIABLE_DECLARATOR_LIST, VARIABLE_DECLARATOR, VARIABLE_DECLARATOR_ID, VARIABLE_INITIALIZER, UNANN_TYPE, UNANN_PRIMITIVE_TYPE, UNANN_REFERENCE_TYPE, UNANN_CLASS_OR_INTERFACE_TYPE, UNANN_CLASS_TYPE, UNANN_INTERFACE_TYPE, UNANN_TYPE_VARIABLE, UNANN_ARRAY_TYPE, METHOD_DECLARATION, METHOD_MODIFIER, METHOD_HEADER, RESULT, METHOD_DECLARATOR, FORMAL_PARAMETER_LIST, FORMAL_PARAMETERS, FORMAL_PARAMETER, VARIABLE_MODIFIER, LAST_FORMAL_PARAMETER, RECEIVER_PARAMETER, THROWS, EXCEPTION_TYPE_LIST, EXCEPTION_TYPE, METHOD_BODY, INSTANCE_INITIALIZER, STATIC_INITIALIZER, CONSTRUCTOR_DECLARATION, CONSTRUCTOR_MODIFIER, CONSTRUCTOR_DECLARATOR, SIMPLE_TYPE_NAME, CONSTRUCTOR_BODY, EXPLICIT_CONSTRUCTOR_INVOCATION, ENUM_DECLARATION, ENUM_BODY, ENUM_CONSTANT_LIST, ENUM_CONSTANT, ENUM_CONSTANT_MODIFIER, ENUM_BODY_DECLARATIONS, INTERFACE_DECLARATION, NORMAL_INTERFACE_DECLARATION, INTERFACE_MODIFIER, EXTENDS_INTERFACES, INTERFACE_BODY, INTERFACE_MEMBER_DECLARATION, CONSTANT_DECLARATION, CONSTANT_MODIFIER, INTERFACE_METHOD_DECLARATION, INTERFACE_METHOD_MODIFIER, ANNOTATION_TYPE_DECLARATION, ANNOTATION_TYPE_BODY, ANNOTATION_TYPE_MEMBER_DECLARATION, ANNOTATION_TYPE_ELEMENT_DECLARATION, ANNOTATION_TYPE_ELEMENT_MODIFIER, DEFAULT_VALUE, ANNOTATION, NORMAL_ANNOTATION, ELEMENT_VALUE_PAIR_LIST, ELEMENT_VALUE_PAIR, ELEMENT_VALUE, ELEMENT_VALUE_ARRAY_INITIALIZER, ELEMENT_VALUE_LIST, MARKER_ANNOTATION, SINGLE_ELEMENT_ANNOTATION, ARRAY_INITIALIZER, VARIABLE_INITIALIZER_LIST, BLOCK, BLOCK_STATEMENTS, BLOCK_STATEMENT, LOCAL_VARIABLE_DECLARATION_STATEMENT, LOCAL_VARIABLE_DECLARATION, STATEMENT, STATEMENT_NO_SHORT_IF, STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT, EMPTY_STATEMENT, LABELED_STATEMENT, LABELED_STATEMENT_NO_SHORT_IF, EXPRESSION_STATEMENT, STATEMENT_EXPRESSION, IF_THEN_STATEMENT, IF_THEN_ELSE_STATEMENT, IF_THEN_ELSE_STATEMENT_NO_SHORT_IF, ASSERT_STATEMENT, SWITCH_STATEMENT, SWITCH_BLOCK, SWITCH_BLOCK_STATEMENT_GROUP, SWITCH_LABELS, SWITCH_LABEL, ENUM_CONSTANT_NAME, WHILE_STATEMENT, WHILE_STATEMENT_NO_SHORT_IF, DO_STATEMENT, FOR_STATEMENT, FOR_STATEMENT_NO_SHORT_IF, BASIC_FOR_STATEMENT, BASIC_FOR_STATEMENT_NO_SHORT_IF, FOR_INIT, FOR_UPDATE, STATEMENT_EXPRESSION_LIST, ENHANCED_FOR_STATEMENT, ENHANCED_FOR_STATEMENT_NO_SHORT_IF, BREAK_STATEMENT, CONTINUE_STATEMENT, RETURN_STATEMENT, THROW_STATEMENT, SYNCHRONIZED_STATEMENT, TRY_STATEMENT, CATCHES, CATCH_CLAUSE, CATCH_FORMAL_PARAMETER, CATCH_TYPE, FINALLY, TRY_WITH_RESOURCES_STATEMENT, RESOURCE_SPECIFICATION, RESOURCE_LIST, RESOURCE, PRIMARY, PRIMARY_NO_NEW_ARRAY, CLASS_LITERAL, CLASS_INSTANCE_CREATION_EXPRESSION, UNQUALIFIED_CLASS_INSTANCE_CREATION_EXPRESSION, CLASS_OR_INTERFACE_TYPE_TO_INSTANTIATE, TYPE_ARGUMENTS_OR_DIAMOND, FIELD_ACCESS, ARRAY_ACCESS, METHOD_INVOCATION, ARGUMENT_LIST, METHOD_REFERENCE, ARRAY_CREATION_EXPRESSION, DIM_EXPRS, DIM_EXPR, EXPRESSION, LAMBDA_EXPRESSION, LAMBDA_PARAMETERS, INFERRED_FORMAL_PARAMETER_LIST, LAMBDA_BODY, ASSIGNMENT_EXPRESSION, ASSIGNMENT, LEFT_HAND_SIDE, ASSIGNMENT_OPERATOR, CONDITIONAL_EXPRESSION, CONDITIONAL_OR_EXPRESSION, CONDITIONAL_AND_EXPRESSION, INCLUSIVE_OR_EXPRESSION, EXCLUSIVE_OR_EXPRESSION, AND_EXPRESSION, EQUALITY_EXPRESSION, RELATIONAL_EXPRESSION, SHIFT_EXPRESSION, ADDITIVE_EXPRESSION, MULTIPLICATIVE_EXPRESSION, UNARY_EXPRESSION, PRE_INCREMENT_EXPRESSION, PRE_DECREMENT_EXPRESSION, UNARY_EXPRESSION_NOT_PLUS_MINUS, POSTFIX_EXPRESSION, POST_INCREMENT_EXPRESSION, POST_DECREMENT_EXPRESSION, CAST_EXPRESSION, CONSTANT_EXPRESSION,

	// From SimpleParser (for dev purposes only, will not be used in final product)
	CLASS_NAME, SUPER_CLASS, SUPER_INTERFACES, INTERFACE_NAME, MAIN_METHOD_DECLARATION, METHOD_STATEMENT, PRINT_STATEMENT,

	// From EbnfToJava (for dev purposes only, will not be used in final product)
	GRAMMAR, GROUPING, OPTIONAL, REPEATING, RULE, SUBEXPRESSION,
}